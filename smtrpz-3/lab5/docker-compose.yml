version: '3.4'
services:
 eureka-service:
   build:
     context: eureka-service
     dockerfile: Dockerfile
   ports:
     - '8761:8761'

 eureka-client:
   build:
     context: eureka-client
     dockerfile: Dockerfile
   ports:
     - '8081-8082:8081'
   depends_on:
     - eureka-service
     - mysql

 mysql:
   image: mysql:5.7
   restart: always
   environment:
     MYSQL_DATABASE: 'lab1'
     MYSQL_USER: 'root'
     MYSQL_PASSWORD: 'root'
     MYSQL_ROOT_PASSWORD: 'root'
   ports:
     - '3306:3306'

 api-gateway:
   build:
     context: api-gateway
     dockerfile: Dockerfile
   ports:
     - '8080:8080'
   depends_on:
     - eureka-client

# prometheus:
#   image: prom/prometheus
#   container_name: prometheus
#   volumes:
#     - ./prometheus.yml:/etc/prometheus/prometheus.yml
#   ports:
#   - "9090:9090"
#   - "9080:9080"

 grafana:
   image: grafana/grafana
   ports:
   - "3000:3000"

 zookeeper:
   image: wurstmeister/zookeeper
   ports:
     - "2181:2181"
   hostname: zookeeper

 kafka:
   image: wurstmeister/kafka
   command: [start-kafka.sh]
   ports:
     - "9092:9092"
   hostname: kafka
   environment:
     KAFKA_CREATE_TOPICS: "create.entity:3:1,update.entity:3:1"
     KAFKA_ADVERTISED_HOST_NAME: kafka
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     KAFKA_ADVERTISED_PORT: 9092
   depends_on:
     - "zookeeper"

 consumer:
  build:
    context: consumer
    dockerfile: Dockerfile
  ports:
  - "8034:8034"
  depends_on:
    - kafka